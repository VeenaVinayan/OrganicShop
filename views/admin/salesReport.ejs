<%- include('./includes/adminHead.ejs') %>
<%- include('./includes/adminNavbar.ejs') %>
<style>
    .pagination-area {
      display: none; /* Hide by default */
    }
    .pagination .page-item .page-link {
      padding: 0.5rem 1rem; /* Adjust padding for more space */
    }
  </style>
<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Generate Report</h2>
            <p>Sales Report </p>
        </div>
    </div>
    <div class="card mb-4">
        <header class="card-header">
            <div class="row align-items-center">
                <div class="row">
                    <div class="col-lg-3">
                        <div class="card card-body mb-4">
                            <article class="icontext">
                                <span class="icon icon-sm rounded-circle bg-primary-light"><i class="text-primary material-icons md-monetization_on"></i></span>
                                <div class="text">
                                    <h6 class="mb-1 card-title"> Sales Count!</h6>
                                    <span><%= count %></span>
                                    <span class="text-sm"></span>
                                </div>
                            </article>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="card card-body mb-4">
                            <article class="icontext">
                                <span class="icon icon-sm rounded-circle bg-success-light"><i class="text-success material-icons md-local_shipping"></i></span>
                                <div class="text">
                                    <h6 class="mb-1 card-title">Order Amount !</h6> <span><%= sumOrder %></span>
                                    <span class="text-sm">
                                        Excluding orders in transit
                                    </span>
                                </div>
                            </article>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="card card-body mb-4">
                            <article class="icontext">
                                <span class="icon icon-sm rounded-circle bg-warning-light"><i class="text-warning material-icons md-qr_code"></i></span>
                                <div class="text">
                                    <h6 class="mb-1 card-title"> Discount !</h6> <span><%= discount %></span>
                                    <span class="text-sm">
                                        In 10 Categories
                                    </span>
                                </div>
                            </article>
                        </div>
                    </div>
                </div>
                <hr>
                <div class="col-md-3 col-sm-3 col-12 mb-3 mb-md-0">
                    <div class="custom_select col-sm-3 col-md-3">
                        <label for="start_date" style="color: #000; font-weight: bold;font-size: 16px;" class="text-center text-muted">Select Interval</label>
                        <select class="form-select select-nice" id="reportType"name="type" class="required">
                            <option value="">-Select-</option>
                            <option value="Daily">Daily</option>
                            <option value="Weekly">Weekly</option>
                            <option value="Monthly">Monthly</option>
                            <option value="Yearly">Yearly</option>
                            <option value="Custom">Custom</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3 col-sm-3 col-6 mb-3 mb-md-0">
                    <label for="start_date" style="color: #000; font-weight: bold;font-size: 16px;"  class="text-center text-muted">Start Date</label>
                    <input type="date" class="form-control" id="startDate" name="from" value=setDate()>
                </div>
                <div class="col-md-3 col-6 col-sm-3 mb-3 mb-md-0">
                    <label for="start_date" style="color: #000; font-weight: bold;font-size: 16px;"  class="text-center text-muted">Start Date</label>
                    <input type="date" class="form-control" name="to" id="endDate" value=setDate()>
                </div>
                <div class="col-md-3 col-6 mb-3 mb-md-0" >
                    <button class="form-control btn-primary btn" id="btnReport" >Report</button>
                </div>
            </div>
        </header>
        <div class="card-body">
            <div class="table-responsive">
                <div class="table-responsive">
                    <table class="table align-middle table-nowrap mb-0" id="reportTable">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" class="text-center">
                                    No
                                </th>
                                <th class="align-middle" scope="col">Order ID</th>
                                <th class="align-middle" scope="col">Customer Name</th>
                                <th class="align-middle" scope="col">Total</th>
                                <th class="align-middle" scope="col">Offer</th>
                                <th class="align-middle" scope="col">Payment Method</th>
                                <th class="align-middle" scope="col">Delivered Date</th>
                                <th class="align-middle" scope="col">Coupon
                                <th class="align-middle" scope="col">Coupon Discount</th>
                            </tr>
                        </thead>
                       <tbody id="reportTableBody">
                       </tbody>           
                  </table>
                </div>
              
            <div class="pagination-area mt-3 mb-3">
            <nav aria-label="Page navigation example">
              <ul class="pagination justify-content-start" id="paginationControls">
                <!-- Pagination controls will be inserted here --><h5>pagination</h5>
              </ul>
            </nav>
          </div>
            </div> 
            <div class="row">
                <input type="hidden" id="reportData">
                <div class="d-flex row p-3 col-4"  >
                   <button class="btn btn-primary" id="btnPdf" style="display: none;"><a href="/generatePdf" class="btn"> Download Pdf</a></button> 
                </div>
                <div class="d-flex row p-3 col-4" >
                   <button class="btn btn-primary" id="btnExcel" style="display: none;">Download Excel</button>
                </div>  
                </div>
        </div>
     </div>
     </section>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.70/pdfmake.min.js"></script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.70/vfs_fonts.js"></script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.full.min.js"></script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>

    <script>
        let LIMIT = 18;
        let currentPage = 1;
        let data = [];
        let index=1;
        document.addEventListener('DOMContentLoaded', (event) => {
          let startDate = document.getElementById('startDate');
          startDate.value=setDate(new Date());
          let endDate = document.getElementById('endDate');
          endDate.value=setDate(new Date());
          console.log("Inside the function!!"); 
    
        }); 
        document.getElementById('btnReport').addEventListener('click',()=> {
            console.log("Inside generate report");
            const reportType =document.getElementById('reportType');
            const type = reportType.value;
            const from = document.getElementById('startDate').value;
            const to = document.getElementById('endDate').value;
            const selectedType = document.getElementById('reportType').value;
              if(selectedType ===""){
                Swal.fire("Please select any option!!");
                return;
              }
              $.ajax({
                   url:`/generateReport/${selectedType}/${from}/${to}`,
                   method:'GET',
                   contentType:'application/json',
                   success:function(res){
                        console.log("Values :::"+res);
                        const totalDocuments = res.orders.length;
                        currentPage = 1;
                        document.querySelector('.pagination-area').style.display = 'block';
                        data = res.orders;
                        document.getElementById('reportData').value=JSON.stringify(res.orders);
                        document.getElementById('btnExcel').style.display="block";
                        document.getElementById('btnPdf').style.display="block";
                        populateTable();
                   },
                   error:function(xhr,status,error){
                        Swal.fire("Error Occured !!","","error");
                   }
              });
          })
         
   function populateTable() {
    console.log("INside display Table !!");
        let tableBody = document.getElementById('reportTableBody');
        tableBody.innerHTML=' ';
        const start = (currentPage - 1) * LIMIT;
        const end = start + LIMIT;
        index=(currentPage-1) * LIMIT;
        const paginatedData = data.slice(start, end);
        paginatedData.forEach((item) => {
            let date = moment(item.deliveredDate).format('YYYY-MM-DD');
            let row = document.createElement('tr');
            console.log("INside data values !!");
               row.innerHTML = `
                <td>${++index}</td>
                <td>${item._id.toString().substring(6,16)}</td>
                <td>${item.user.name}</td>
                <td>${item.amount}</td>
                <td>${item.totalDiscount}</td>
                <td>${item.paymentMode}</td>
                <td>${date}</td>
                <td>${item.coupon?item.coupon.coupon:'No Coupon'}</td>
                <td>${item.couponDiscount?item.couponDiscount:0}</td>
            `;
            tableBody.appendChild(row);
        });
        updatePaginationControls();
         //document.getElementById('downloadDiv').style.display="block";
    }
    function updatePaginationControls() {
    const totalPages = Math.ceil(data.length / LIMIT);
    console.log("Inside Pagination !!");
    const paginationControls = document.getElementById('paginationControls');
    paginationControls.innerHTML = '';

   for (let i = 1; i <= totalPages; i++) {
      paginationControls.innerHTML += `<li class="page-item ${i === currentPage ? 'active' : ''}"><a class="page-link" href="javascript:void(0);" onclick="goToPage(${i})">${i}</a></li>`;
    }
  }
  function changePage(page) {
      currentPage = page;
      populateTable();
    }

    function goToPage(page) {
      currentPage = page;
      populateTable();
    }

   function setDate(today){
         console.log("Inside set Date function!!");
         const year = today.getFullYear();
         const month = (today.getMonth()+1).toString().padStart(2,0);
         const day=today.getDate().toString().padStart(2,0);
         const date=`${year}-${month}-${day}`;
         console.log("Date is "+date);
         return date;
    }
   document.getElementById('btnExcel').addEventListener('click',() => {
       console.log("INside Download Excel !!! ");
       const order = formatOrderData();
       const worksheet = XLSX.utils.json_to_sheet(order);
       // Create a new workbook
       const workbook = XLSX.utils.book_new();
      // Append the worksheet to the workbook
      XLSX.utils.book_append_sheet(workbook, worksheet, 'Order Summary');

// Write the workbook to a binary string
       const workbookBinary = XLSX.write(workbook, { bookType: 'xlsx', type: 'binary' });

// Convert the binary string to an array buffer
     const s2ab = (s) => {
     const buf = new ArrayBuffer(s.length);
     const view = new Uint8Array(buf);
     for (let i = 0; i < s.length; i++) {
        view[i] = s.charCodeAt(i) & 0xFF;
     }
      return buf;
   };
// Create a Blob from the array buffer
   const blob = new Blob([s2ab(workbookBinary)], { type: 'application/octet-stream' });
// Trigger a download of the Blob
   saveAs(blob, 'order_summary.xlsx');
 })
 
function formatOrderData(){
    const order = JSON.parse(document.getElementById('reportData').value);
    const orderData = order.map(item =>({
            Order_ID:item._id.toString().substring(5,15),
            Name:item.user.name,
            Delivery_Date : moment(item.deliveredDate).format('YYYY-MM-DD'),
            Amount : item.amount,
            Coupon: item.coupon?item.coupon.coupon:'No Coupon',
            Coupon_Discount : item.couponDiscount?item.couponDiscount:0,
            Payment_Method : item.paymentMode,
            Offer : item.totalDiscount,
    }))
    return orderData; 
}

// function downloadPdf() {
//             var table = document.getElementById('reportTable');
//             var rows = [];

//             // Get the table headers
//             var headers = [];
//             for (var i = 0; i < table.rows[0].cells.length; i++) {
//                 headers.push(table.rows[0].cells[i].innerText);
//             }
//             rows.push(headers);

//             // Get the table data
//             for (var i = 1; i < table.rows.length; i++) {
//                 var cells = [];
//                 for (var j = 0; j < table.rows[i].cells.length; j++) {
//                     cells.push(table.rows[i].cells[j].innerText);
//                 }
//                 rows.push(cells);
//             }

//             // Calculate the widths for each column based on the maximum content length
//             var colWidths = headers.map((header, index) => {
//                 let maxLength = header.length;
//                 rows.forEach(row => {
//                     if (row[index] && row[index].length > maxLength) {
//                         maxLength = row[index].length;
//                     }
//                 });
//                 // Set a base width per character and add some padding
//                 return maxLength * 6 + 6; // 7 pixels per character and 20 pixels padding
//             });

//             var docDefinition = {
//                 content: [
//                     {
//                         table: {
//                             headerRows: 1,
//                             widths: colWidths,
//                             body: rows
//                         },
//                         layout: 'lightHorizontalLines' // Optional: Adds a light horizontal line to the table
//                     }
//                 ],
//                 defaultStyle: {
//                     fontSize: 10, // Reduce font size
//                     wordBreak: 'break-word' // Ensure text wraps within cells
//                 },
//                 pageSize: 'A4',
//                 pageOrientation: 'landscape',
//                 pageMargins: [40, 60, 40, 60]
//             };

//             pdfMake.createPdf(docDefinition).download('SalesReport.pdf');
//         }
    
</script>
<%- include('./includes/adminFooter.ejs') %>