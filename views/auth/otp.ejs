<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    
<style>
    body{background-color:rgb(224, 200, 200)}.height-100{height:100vh}.card{width:400px;border:none;height:300px;box-shadow: 0px 5px 20px 0px #d2dae3;z-index:1;display:flex;justify-content:center;align-items:center}.card h6{color:red;font-size:20px}.inputs input{width:40px;height:40px}input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button{-webkit-appearance: none;-moz-appearance: none;appearance: none;margin: 0}.card-2{background-color:#fff;padding:10px;width:350px;height:100px;bottom:-50px;left:20px;position:absolute;border-radius:5px}.card-2 .content{margin-top:50px}.card-2 .content a{color:red}.form-control:focus{box-shadow:none;border:2px solid red}.validate{border-radius:20px;height:40px;background-color:red;border:1px solid red;width:140px}
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.4/font/bootstrap-icons.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.6/dist/sweetalert2.all.min.js"> </script> 
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
</head>

<body>
     <div class="container height-100 d-flex justify-content-center align-items-center">
        <div class="position-relative">

            <div class="card p-2 text-center">
                <%  if(message.error) { %>
                    <div class="alert alert-danger" role="alert">
                       <%= message.error %>
                    </div>
                <% } %>
                <h5>Please enter the one-time password <br> to verify your account</h5>
                <div>
                    <span>OTP code has been sent to your mail</span>
                </div>
                <form id="otpForm">
                    <div id="otp" class="inputs d-flex flex-row justify-content-center mt-2">
                        <input class="m-2 text-center form-control rounded" type="text" name="val1" id="first"
                            maxlength="1" />
                        <input class="m-2 text-center form-control rounded" type="text" name="val2" id="second"
                            maxlength="1" />
                        <input class="m-2 text-center form-control rounded" type="text" name="val3" id="third"
                            maxlength="1" />
                        <input class="m-2 text-center form-control rounded" type="text" name="val4" id="fourth"
                            maxlength="1" />
                        <input class="m-2 text-center form-control rounded" type="text" name="val5" id="fifth"
                            maxlength="1" />
                        <input class="m-2 text-center form-control rounded" type="text" name="val6" id="sixth"
                            maxlength="1" />
                    </div>
                    <input type="hidden" name="email" value="email" id="">
                    <div class="mt-4">  
                        <input type="submit" value="Validate" class="btn btn-success px-4 validate" id="btnValidate">
                    </div>
                    <div class="mt-4" style="display: none;" id="resend">  
                        <a href="/resendOtp"><input type="button" value="Resend" class="btn btn-primary px-4 validate" id="btnResend"></a>
                    </div>
                    <div id="timer">1:00</div>
            </form>        
<script>
    
    let seconds = 60;
    let timerInterval;
    document.addEventListener("DOMContentLoaded", (event) => {
            console.log("DOM fully loaded and parsed");
            startTimer();
   });
    function updateTimer() {
        const timerElement = document.getElementById('timer');
        const minutes = Math.floor(seconds / 60);
        const remainingSeconds = seconds % 60;
        timerElement.textContent = `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;
    }
    function startTimer() {
        updateTimer();
            timerInterval = setInterval(() => {
            seconds--;
            if (seconds < 0) {
                clearInterval(timerInterval);
                Swal.fire("Time Out!");
                document.getElementById('resend').style.display="block";
            } else{
                updateTimer();
            }
        }, 1000);
    }
    function stopTimer(){
         clearInterval(timerInterval);  
    }
    // Start the timer when the page loads
  
    
    document.getElementById('otpForm').addEventListener('submit', async (e) =>{
        e.preventDefault();
        const val1= document.getElementById('first').value.trim();
        const val2= document.getElementById('second').value.trim();
        const val3= document.getElementById('third').value.trim();
        const val4= document.getElementById('fourth').value.trim();
        const val5= document.getElementById('fifth').value.trim();
        const val6= document.getElementById('sixth').value.trim();
        console.log("Values :: "+val1+val2+val3+val4+val5+val6);
 try{
        await fetch(`/userOtpSubmit?val1=${val1}&val2=${val2}&val3=${val3}&val4=${val4}&val5=${val5}&val6=${val6}`,{
                method:'POST',
        }).then(response => response.json())
           .then(data => {
               if(data.success){
                 stopTimer();
                 Swal.fire({
                      title: " CONGRATS !",
                      text: "Successfully submit OTP !",
                      icon: "success"
                  }).then(() =>{
                    window.location.href='/login';
                 })
                }else{
                    console.log("Error in otp !!");
                    stopTimer();
                    document.getElementById('resend').style.display="block";
                    Swal.fire({
                       title: " INVALID OTP  ! ",
                       text: "Time exceeding .... Click on Resend OTP  !",
                       icon: "error"
                  });
                stopTimer();
             }
        });
    }catch(err){
         console.log("Error occured :: "+err);
    }
    });     
        // Get all the input fields
            const inputs = document.querySelectorAll("#otp input");
    
            // Add event listener to each input field
            inputs.forEach((input, index) => {
                input.addEventListener("input", (event) => {
                    const value = event.target.value;
                    if (value.length === 1) {
                        if (index < inputs.length - 1) {
                            inputs[index + 1].focus(); // Focus on the next input field
                        }
                    }
                });
            });
    
            // Form submission event listener
            const otpForm = document.getElementById("otpForm");
            otpForm.addEventListener("submit", (event) => {
                // Check if all fields are filled
                const isFilled = Array.from(inputs).every((input) => input.value.trim() !== "");
                if (!isFilled) {
                    event.preventDefault(); // Prevent form submission
                    // alert("Please fill in all fields.");
                }
            });
        </script>
    </div>
 
</body>
</html>